@page "/time-zone"
@using NodaTime

<PageTitle>Time Zone Converter</PageTitle>

<div class="d-flex flex-row justify-content-center">
    <div class="w-auto">
        <div class="text-center">
            <i class="bi bi-cone-striped text-warning" style="font-size: 5rem;"></i>
        </div>
    </div>
    <div>
        <h1 class="text-center text-primary">Time Zone Converter</h1>
        <h2 class="text-center text-danger">Under Construction</h2>
    </div>
</div>

<div class="row gy-2 mb-2">
    <div class="col">
        <div class="input-group mb-3">
            <span class="input-group-text" id="basic-addon1">Input Time</span>
            <input type="text" class="form-control form-control-lg" placeholder="Input Time. Example: 08:50:39.1234123, 24, 18 BST to EDT, 17 Chicago to London" @bind="_input" @bind:after="OnInputChanged" @bind:event="oninput"/>
        </div>
    </div>
</div>
<div class="row gy-4 flex-row">
    <div class="col d-flex flex-row">
        @foreach (var zone in _zones)
        {
            <h4 style="width: 70px;" class="text-center">
                @zone.DisplayName
            </h4>
        }
    </div>
</div>
<div class="row gy-4 flex-row">
    <div class="col d-flex flex-row btn-group-multi-vertical">
        @foreach (var zone in _zones)
        {
            // Add T+1 / T-1 to times

            <div style="width: 70px; background-color: pink;">
                <div class="btn-group-vertical bg-light w-100">
                    @{
                        var zeroTime = _zonedDateTime.PlusHours(-_zonedDateTime.Hour);
                        var isSelectedTimeZone = _chosenTimeZone.Zone == zone.Zone;
                    }
                    
                    @for (int i = 0; i < 24; i++)
                    {
                        var isCurrentRow = i == _zonedDateTime.Hour;

                        var currentColumnTime = zeroTime.PlusHours(i).WithZone(zone.Zone);
                        
                        var hour = currentColumnTime.Hour;

                        var isPreviousDay = currentColumnTime.Date < _zonedDateTime.Date;
                        var isNextDay = currentColumnTime.Date > _zonedDateTime.Date;

                        var dateClass = isPreviousDay ? "previous-date" : isNextDay ? "next-date" : "";

                        var active = isSelectedTimeZone ? "active" : "";
                        
                        if (isCurrentRow)
                        {
                            <button type="button" class="btn btn-primary @dateClass @active">@hour.ToString("00:\\0\\0") </button>
                        }
                        else
                        {
                            var btn_primary = "btn btn-outline-primary";
                            
                            if (isPreviousDay || isNextDay)
                            {
                                btn_primary = "btn-secondary";
                            }
                            
                            <button type="button" class="btn @btn_primary @dateClass @active">@hour.ToString("00:\\0\\0")</button>
                        }
                    }
                </div>
            </div>
        }
    </div>
</div>


@code {
    
    private string _input = "";
    private Instant _instant = SystemClock.Instance.GetCurrentInstant();
    private ZonedDateTime _zonedDateTime => _instant.InZone(_chosenTimeZone.Zone);
    private DateTimeZoneInfo _chosenTimeZone = DateTimeZoneInfo.Utc; 

    private List<DateTimeZoneInfo> _zones = [
        DateTimeZoneInfo.America_LosAngeles, 
        DateTimeZoneInfo.America_Chicago, 
        DateTimeZoneInfo.America_NewYork, 
        DateTimeZoneInfo.Utc, 
        DateTimeZoneInfo.Europe_London, 
        DateTimeZoneInfo.Europe_Amsterdam, 
        DateTimeZoneInfo.Asia_HongKong, 
        DateTimeZoneInfo.Australia_Sydney, 
    ]; 

    private void OnInputChanged()
    {
    }

}